flutter_native_splash:
  android: true
  ios: true
  web: false

  image: "assets/splash/logo@3x.png"
  branding: "assets/splash/branding@3x.png"
  background_image: "assets/splash/background@3x.png"
  branding_mode: bottom
  branding_bottom_padding: 24

  color_dark: "#003738"
  image_dark: "assets/splash/logo@3x.png"
  branding_dark: "assets/splash/branding@3x.png"

  

  android_12:
    color: "#86bbbd"
    image: "assets/splash/logo_android.png"
    # App icon background color.
    #icon_background_color: "#111111"
    branding: "assets/splash/branding_android@3x.png"
    color_dark: "#003738"
    image_dark: "assets/splash/logo_android.png"


# The position of the splash image can be set with android_gravity, ios_content_mode, and
# web_image_mode parameters.  All default to center.
#
# android_gravity can be one of the following Android Gravity (see
# https://developer.android.com/reference/android/view/Gravity): bottom, center,
# center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
# fill_vertical, left, right, start, or top. android_gravity can be combined using the | operator to achieve multiple effects. 
# For example:
# `android_gravity: fill|clip_vertical` - This will fill the width while maintaining the image's vertical aspect ratio
#android_gravity: center
#
# ios_content_mode can be one of the following iOS UIView.ContentMode (see
# https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
# scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
# bottomLeft, or bottomRight.
#ios_content_mode: center
#
# web_image_mode can be one of the following modes: center, contain, stretch, and cover.
#web_image_mode: center

# The screen orientation can be set in Android with the android_screen_orientation parameter.
# Valid parameters can be found here:
# https://developer.android.com/guide/topics/manifest/activity-element#screen
#android_screen_orientation: sensorLandscape

# To hide the notification bar, use the fullscreen parameter.  Has no effect in web since web
# has no notification bar.  Defaults to false.
# NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
#       To show the notification bar, add the following code to your Flutter app:
#       WidgetsFlutterBinding.ensureInitialized();
#       SystemChrome.setEnabledSystemUIMode(SystemUiMode.manual, overlays: [SystemUiOverlay.bottom, SystemUiOverlay.top], );
  fullscreen: true

# If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
# with the info_plist_files parameter.  Remove only the # characters in the three lines below,
# do not remove any spaces:
#info_plist_files:
#  - 'ios/Runner/Info-Debug.plist'
#  - 'ios/Runner/Info-Release.plist'
